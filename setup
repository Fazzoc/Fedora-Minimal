#!/bin/env bash

##### Progerss Bar #####
total_steps=10
current_step=0

progress_update() {
    current_step=$((current_step + 1))
    progress=$((current_step * 100 / total_steps))
    
    term_width=$(tput cols)
    term_height=$(tput lines)
    
    completed=$((progress * term_width / 100))
    remaining=$((term_width - completed))
    
    progress_bar=$(printf "%0.s#" $(seq 1 $completed))$(printf "%0.s-" $(seq 1 $remaining))

    printf "\033[2J"
    printf "\033[${term_height};0H"
    printf "\033[K"

    printf "%*s\n%s" $(( (term_width + ${#1} + 7) / 2)) "$1 [$progress%]" "$progress_bar"
}

show_prompt() {
    term_height=$(tput lines)

    printf "\033[${term_height};0H\033[2A\033[K"

    read -p "$1" response
    
    echo "$response"
}

#### Package Lists ####
main_packages=(
  "kernel-cachyos"
  "uksmd"
  "@Fonts"
  "amd-gpu-firmware"
  "mt7xxx-firmware"
  "realtek-firmware"
  "dnfdragora"
  "bluedevil"
  "breeze-icon-theme"
  "colord-kde"
  "cups-pk-helper"
  "dolphin"
  "glibc-all-langpacks"
  "gnome-keyring-pam"
  "kcm_systemd"
  "kde-gtk-config"
  "kde-settings-pulseaudio"
  "kdegraphics-thumbnailers"
  "kdeplasma-addons"
  "kdialog"
  "kdnssd"
  "kf5-kipi-plugins"
  "kf6-baloo-file"
  "kmenuedit"
  "kitty"
  "kscreen"
  "kscreenlocker"
  "ksshaskpass"
  "kwin"
  "kinfocenter"
  "krita"
  "NetworkManager-config-connectivity-fedora"
  "phonon-qt5-backend-gstreamer"
  "pinentry-qt"
  "plasma-breeze"
  "plasma-desktop"
  "plasma-discover"
  "plasma-nm"
  "plasma-pa"
  "plasma-user-manager"
  "plasma-workspace"
  "plasma-workspace-geolocation"
  "plymouth-theme-spinner"
  "polkit-kde"
  "qt5-qtbase-gui"
  "qt5-qtdeclarative"
  "sddm"
  "sddm-breeze"
  "sddm-kcm"
  "ark"  
  "git"
  "fastfetch"
  "tar"
  "vlc"
  "pv"
  "okular"
  "bleachbit"
  "gnome-disk-utility"
  "util-linux-user"
  "wget"
  "./OpenTabletDriver.rpm"
)

declare -A device_packages
device_packages[desktop]="plasma-systemmonitor timeshift konsole-part kde-print-manager"
device_packages[laptop]="htop"

grub_conf=(
  "GRUB_TIMEOUT=1"
  "GRUB_TIMEOUT_STYLE=hidden"
  "GRUB_DISTRIBUTOR=\"\$(sed 's, release .*$,,g' /etc/system-release)\""
  "GRUB_DEFAULT=saved"
  "GRUB_DISABLE_SUBMENU=true"
  "GRUB_CMDLINE_LINUX=\"rhgb quiet loglevel=3 mitigations=off nowatchdog processor.ignore_ppc=1 split_lock_detect=off amdgpu.ppfeaturemask=0xfffd7fff\""
  "GRUB_DISABLE_RECOVERY=true"
  "GRUB_ENABLE_BLSCFG=true"
)

clean=(
"setup"
"OpenTabletDriver.rpm"
".git"
)

##### CHECK FOR SUDO or ROOT #####
if [[ $EUID != 0 ]]; then
  echo "This script must be run as sudo or root, try again..."
  exit 1
fi

##### PACKAGE SETUP #####
progress_update "Stage 1 - Package setup"
{
  curl -sLO https://github.com/OpenTabletDriver/OpenTabletDriver/releases/latest/download/OpenTabletDriver.rpm
  dnf copr enable bieszczaders/kernel-cachyos -y
  dnf copr enable bieszczaders/kernel-cachyos-addons -y
  dnf install "${main_packages[@]}" -y

  flatpak remote-add --if-not-exists flathub https://dl.flathub.org/repo/flathub.flatpakrepo
  flatpak install io.gitlab.librewolf-community org.onlyoffice.desktopeditors -y
} > /dev/null 2>&1

while true; do
read -p "Hey, There's some more packages to install! To continue further, type in which device you are using - (D)esktop|(l)aptop:" choice
  choice=${choice:-d}
  case "${choice,,}" in
        d) device_type="desktop" ;;
        l) device_type="laptop" ;;
        *) echo "Invalid input. Please try again.";;
    esac

    printf "Continuing install for ${device_type^}... (The rest of the setup will remember the device!)"

    dnf install ${device_packages[$device_type]} -y > /dev/null 2>&1
    break
done

progress_update "Updating packages..."
dnf update -y > /dev/null 2>&1

progress_update "Removing unsued packages..."
{
  dnf autoremove -y
  dnf erase \
    plasma-welcome \
    audiocd-kio -y

  rpm -e --nodeps \
    maliit-keyboard
} > /dev/null 2>&1

##### SYSTEM SETUP #####
    progress_update "Stage 2 - Configuring system"
{
  plymouth-set-default-theme bgrt -R
  setsebool -P domain_kernel_load_modules on

  printf '%s\n' "${grub_conf[@]}" > /etc/default/grub
  grub2-mkconfig -o /boot/grub2/grub.cfg

  progress_update "Configuring Services..."
  systemctl enable sddm
  systemctl enable uksmd.service
  systemctl set-default graphical.target
  systemctl disable NetworkManager-wait-online.service
  printf "Note: The command (systemctl --user enable opentabletdriver.service --now) will need to be run as user to enable the OpenTabletDriver service. please do so after your reboot."
  sleep 3
  dracut --regenerate-all --force

  ##### idk how this'll be done yet #####
  progress_update "Configuring Software..."
  ##### THis line is to download config files that'll be copied over to the home directory #####
  # cp -r Configs/Main/ $HOME/ > /dev/null 2>&1 #
  # cp -r Configs/$device_type/ $HOME/ > /dev/null 2>&1 #
} > /dev/null 2>&1

printf  "Setup Complete! Please reboot for all changes to take effect."
while true; do
  reboot_choice=$(show_prompt "Would you like to reboot now? (Y|n): ")
  choice=${choice:-y}
    case "${choice,,}" in
        y) echo "Rebooting now..."
           rm "${clean[@]}"
           reboot
           exit 0 ;;
        n) rm "${clean[@]}"
           echo "Reboot cancelled. Please remember to reboot your system later."
           break ;;
        *) echo "Invalid input. Please try again." ;;
    esac
done
