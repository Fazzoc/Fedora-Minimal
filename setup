#!/bin/env bash

##### Progerss Bar #####
total_steps=6
current_step=-1
current_stage=""

display_progress() {
    local width=$(($(tput cols) * 80 / 100))
    local center_row=$((($(tput lines) - 4) / 2))
    local center_col=$((($(tput cols) - width - 4) / 2))
    local text="[$3%] $1${2:+ ($2)}"
    local border=$(printf '─%.0s' $(seq 1 $((width + 2))))
    
    clear
    printf "\033[%d;%dH\033[34m┌%s┐\033[0m\n" "$center_row" "$center_col" "$border"
    printf "\033[%d;%dH\033[34m│\033[0m %*s%s%*s \033[34m│\033[0m\n" "$((center_row + 1))" "$center_col" "$(( (width - ${#text}) / 2 ))" "" "$text" "$(( (width - ${#text} + 1) / 2 ))" ""
    printf "\033[%d;%dH\033[34m│\033[0m \033[42m%*s\033[0m%*s \033[34m│\033[0m\n" "$((center_row + 2))" "$center_col" "$((($3 * width) / 100))" "" "$((width - ($3 * width) / 100))" ""
    printf "\033[%d;%dH\033[34m└%s┘\033[0m\n" "$((center_row + 3))" "$center_col" "$border"
    printf "\033[%d;0H" "$((center_row + 5))"
}

progress_update() {
    current_stage="${1:-$current_stage}"
    [ "$3" != "no_display" ] && display_progress "$current_stage" "$2" $((++current_step * 100 / total_steps))
}

#### Package Lists ####
base_packages=(
  "google-noto-fonts-common"
  "liberation-fonts"
  "mozilla-fira-fonts-common"
  "fontawesome-fonts"
  "jetbrains-mono-fonts"
  "amd-gpu-firmware"
  "mt7xxx-firmware"
  "realtek-firmware"
  "dnfdragora"
  "darkly"
  "dolphin"
  "glibc-all-langpacks"
  "kdeplasma-addons"
  "kitty"
  "kinfocenter"
  "kscreen"
  "krita"
  "kdialog"
  "bluedevil"
  "kde-gtk-config"
  "NetworkManager-config-connectivity-fedora"
  "plasma-nm"
  "NetworkManager-wifi"
  "pinentry-qt"
  "plasma-desktop"
  "plymouth-theme-breeze"
  "plymouth-plugin-label"
  "sddm"
  "sddm-kcm"
  "kcm_systemd"
  "kf6-baloo-file"
  "sddm-breeze"
  "plasma-discover"
  "applet-window-buttons"
  "ark"
  "git"
  "fastfetch"
  "tar"
  "okular"
  "bleachbit"
  "gnome-disk-utility"
  "util-linux-user"
  "steam"
  "wget"
  "timeshift"
  "vlc"
  "kio-admin"
  "github-desktop"
  "https://github.com/OpenTabletDriver/OpenTabletDriver/releases/latest/download/OpenTabletDriver.rpm"
)

device_packages=(
  [desktop]="konsole-part kde-print-manager"
  [laptop]="btop"
)

flatpaks=(
  "io.gitlab.librewolf-community"
  "org.onlyoffice.desktopeditors"
  "sh.ppy.osu"
)

device_flatpaks=(
  [desktop]="net.nokyan.Resources"
)

grub_conf=(
  "GRUB_TIMEOUT=1"
  "GRUB_TIMEOUT_STYLE=hidden"
  "GRUB_DISTRIBUTOR=\"\$(sed 's, release .*$,,g' /etc/system-release)\""
  "GRUB_DEFAULT=saved"
  "GRUB_DISABLE_SUBMENU=true"
  "GRUB_CMDLINE_LINUX=\"rhgb quiet loglevel=3 mitigations=off nowatchdog processor.ignore_ppc=1 split_lock_detect=off amdgpu.ppfeaturemask=0xfffd7fff\""
  "GRUB_DISABLE_RECOVERY=true"
  "GRUB_ENABLE_BLSCFG=true"
)

##### CHECK FOR SUDO or ROOT #####
if [[ $EUID != 0 ]]; then
  echo "This script must be run as sudo or root, try again..."
  exit 1
fi

while true; do
  read -p "Hey! To begin this setup, select your desired device - (D)esktop|(l)aptop:" choice
  case "${choice,,}" in
    d|"") device_type="desktop";;
    l) device_type="laptop";;
    *) echo "Invalid input. Please try again."; continue;;
  esac
  break
done

##### PACKAGE SETUP #####
progress_update "Stage 1 - Package setup" "Installing packages..."
{
  dnf -y in https://mirrors.rpmfusion.org/free/fedora/rpmfusion-free-release-$(rpm -E %fedora).noarch.rpm https://mirrors.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-$(rpm -E %fedora).noarch.rpm
  rpm --import https://rpm.packages.shiftkey.dev/gpg.key
  sh -c 'echo -e "[shiftkey-packages]\nname=GitHub Desktop\nbaseurl=https://rpm.packages.shiftkey.dev/rpm/\nenabled=1\ngpgcheck=1\nrepo_gpgcheck=1\ngpgkey=https://rpm.packages.shiftkey.dev/gpg.key" > /etc/yum.repos.d/shiftkey-packages.repo'
  dnf -y config-manager setopt fedora-cisco-openh264.enabled=1
  dnf -y copr enable deltacopy/darkly
  dnf -y in ${base_packages[*]} ${device_packages[$device_type]}

  flatpak remote-add --if-not-exists flathub https://dl.flathub.org/repo/flathub.flatpakrepo
  flatpak install flathub ${flatpaks[*]} ${flatpaks[$device_type]} -y
} > /dev/null 2>&1

progress_update "" "Updating packages..."
{
  dnf -y update
  flatpak update -y
} > /dev/null 2>&1

progress_update "" "Erasing unused packages..."
{
  dnf -y rm plasma-welcome audiocd-kio
  dnf -y autoremove
  rpm -e --nodeps maliit-keyboard
} > /dev/null 2>&1

##### SYSTEM SETUP #####
progress_update "Stage 2 - Configuring system"
{
  plymouth-set-default-theme breeze
  setsebool -P domain_kernel_load_modules on

  printf '%s\n' "${grub_conf[@]}" > /etc/default/grub
  grub2-mkconfig -o /boot/grub2/grub.cfg
} > /dev/null 2>&1

progress_update "" "Configuring Services..."
{
  systemctl enable sddm uksmd.service
  systemctl disable NetworkManager-wait-online.service 
  systemctl set-default graphical.target
  dracut -f --regenerate-all
} > /dev/null 2>&1

progress_update "" "Configuring Software..." ##### This'll be used to download and copy config files to the user's home directory. #####
{
  sleep 2
} > /dev/null 2>&1

progress_update "Setup Complete! Please reboot for all changes to take effect."
while true; do
  read -p "Would you like to reboot now? (Y|n):" reboot_choice
  case "${reboot_choice,,}" in
    y|"") reboot;;
       n) echo "Reboot cancelled. Please remember to reboot your system later."; break;;
    *) echo "Invalid input. Please try again.";;
  esac
done